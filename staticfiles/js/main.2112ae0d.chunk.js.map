{"version":3,"sources":["components/navigations/MenuIcon.jsx","components/navigations/Navigation.jsx","utils/axios.js","store/actions/actionTypes.js","utils/index.js","store/actions/postActions.js","components/helpers/Loading.jsx","components/helpers/Title.jsx","components/post/SinglePost.jsx","components/post/Posts.jsx","components/helpers/Pagination.jsx","store/actions/semesterAction.js","pages/course/CoursePage.jsx","pages/semester/SemesterPage.jsx","components/helpers/NoPost.jsx","components/helpers/Breadcrumb.jsx","components/archive/PostArchive.jsx","pages/HomePage.jsx","pages/semester/IndividualSemesterPage.jsx","pages/course/IndividualCoursePage.jsx","components/BaseFormCard.jsx","components/helpers/SubmitButton.jsx","components/helpers/FormField.jsx","components/helpers/DismissableAlert.jsx","pages/auth/LoginPage.jsx","store/actions/authActions.js","pages/auth/RegisterPage.jsx","pages/course/CreateCourse.jsx","store/actions/courseActions.js","pages/auth/LogoutPage.jsx","components/helpers/DragDropUpload.jsx","pages/post/CreatePost.jsx","pages/auth/resetPassword/ResetPassword.jsx","pages/auth/resetPassword/ResetRequest.jsx","routes.jsx","App.jsx","store/reducers/authReducer.js","store/reducers/courseReducer.js","store/reducers/postReducer.js","store/reducers/semesterReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["MenuIcon","fill","width","viewBox","xmlns","d","NavItem","children","mt","base","md","mr","display","Navigation","props","React","useState","show","setShow","auth","useSelector","state","as","align","justify","wrap","padding","bg","color","mb","size","letterSpacing","to","cursor","onClick","sm","alignItems","flexGrow","exact","isAuthenticated","NavLink","leftIcon","Add","border","isLoading","loading","instance","axios","create","baseURL","process","SEMESTER_DATA_LOADED","SEMESTER_DATA_LOADING","USER_LOGGED_IN","USER_LOGIN_ERROR","USER_LOGGED_OUT","AUTH_LOADING","FORGET_PASSWORD_RESET_EMAIL_SENT","RESET_PASSWORD_ERROR","RESET_PASSWORD_STATUS","COURSE_DATA_LOADED","COURSE_DATA_LOAD_ERROR","COURSE_CREATED","COURSE_CREATE_ERROR","POST_DATA_LOADING","POST_DATA_LOADED","POST_DATA_LOAD_ERROR","POST_CREATED","POST_CREATE_ERROR","POST_CREATE_LOADING","getHeaders","additional","Authorization","localStorage","getItem","formatFileSize","formattedFileSize","toFixed","buildFilter","filters","filter","course","semester","removeEndSign","url","lastChar","charAt","length","slice","getAllPosts","dispatch","type","Types","payload","get","then","res","data","catch","error","response","loadPage","page","getState","prevState","post","Loading","skeleton","rest","Title","title","opacity","SinglePost","images","questions","map","question","pictures","picture","push","isOpen","setIsOpen","photoIndex","setPhotoIndex","boxShadow","my","p","rounded","body","index","imageOnClick","boxSize","objectFit","src","alt","_hover","fallback","id","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","spacing","books","book","CheckCircleIcon","target","href","file","classnotes","note","Posts","posts","Pagination","postData","next","previous","useDispatch","disabled","loadSemesters","CoursePage","semesterData","useEffect","m","full_name","display_name","courses","course_code","SemesterPage","NoPost","MyBreadcrumb","separator","ChevronRight","Link","isCurrentPage","PostArchive","useMediaQuery","isLargerThan1280","w","HomePage","IndividualSemesterPage","semesterId","match","params","semesterTitle","IndividualCoursePage","courseId","courseCode","courseTitle","BaseFormCard","maxW","RouterLink","SubmitButton","colorScheme","FormField","value","label","onChange","placeholder","isInvalid","errorMsg","e","DismissableAlert","text","dismiss","setDismiss","status","position","right","top","LoginPage","history","email","setEmail","password","setPassword","onSubmit","event","preventDefault","loginCreds","setItem","key","login","loadingText","Object","keys","loginErrors","RegisterPage","registrationNo","setRegistrationNo","name","setName","password1","setPassword1","password2","setPassword2","CreateCourse","courseData","code","setCode","setTitle","setSemester","createCourse","errors","reset","created","Logout","headers","removeItem","DragDropUpload","allowedFileType","postType","onDrop","useCallback","acceptedFiles","setFiles","old","files","useDropzone","accept","getRootProps","getInputProps","isDragActive","py","ArrowUp","FileList","replace","c","r","Math","random","toString","CreatePost","setCourse","setCourses","setBody","setPostType","uploadedFiles","setUploadedFiles","uploadedFileError","setUploadedFileError","semesterChangeHandler","parseInt","allCourse","requestArray","forEach","form_data","FormData","append","Promise","all","responses","createPost","classNote","height","createLoading","ResetPassword","new_password1","new_password2","uid","token","flex","resetPassword","resetPasswordErrors","passwordResetted","connect","setError","resetPasswordRequest","passwordResetEmailSent","routes","path","component","ResetRequest","LogoutPage","GuestRoute","Component","render","pathname","from","location","PrivateRoute","App","initialState","authReducer","action","courseReducer","postReducer","results","semesterReducer","rootReducer","combineReducers","composers","applyMiddleware","thunk","store","createStore","compose","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2112ae0d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst MenuIcon = () => {\r\n\r\n    return (\r\n        <svg\r\n            fill=\"white\"\r\n            width=\"12px\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n            <title>Menu</title>\r\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\r\n        </svg>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MenuIcon","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { Box, Heading, Flex, Text, Button } from \"@chakra-ui/react\";\r\nimport MenuIcon from './MenuIcon';\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\n\r\nconst NavItem = ({ children }) => (\r\n    <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\r\n        {children}\r\n    </Text>\r\n);\r\n\r\nconst Navigation = props => {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleToggle = () => setShow(!show);\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n\r\n    return (\r\n        <Flex\r\n            as=\"nav\"\r\n            align=\"center\"\r\n            justify=\"space-between\"\r\n            wrap=\"wrap\"\r\n            padding=\"1.5rem\"\r\n            bg=\"teal.500\"\r\n            color=\"white\"\r\n            {...props}\r\n            mb={4}\r\n        >\r\n            <Flex align=\"center\" mr={5}>\r\n                <Heading as=\"h1\" size=\"lg\" letterSpacing={\"0.2rem\"}>\r\n                    <Link to=\"/\">Study Management</Link>\r\n                </Heading>\r\n            </Flex>\r\n\r\n            <Box cursor=\"pointer\" display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\r\n                <MenuIcon />\r\n            </Box>\r\n\r\n            <Box\r\n                display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\r\n                width={{ sm: \"full\", md: \"auto\" }}\r\n                alignItems=\"center\"\r\n                flexGrow={1}\r\n            >\r\n                <NavItem><NavLink to=\"/courses\" exact>Courses</NavLink></NavItem>\r\n                <NavItem><NavLink to=\"/semesters\" exact>Semesters</NavLink></NavItem>\r\n            </Box>\r\n\r\n            <Box\r\n                display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\r\n                mt={{ base: 4, md: 0 }}\r\n            >\r\n                {auth.isAuthenticated ? (\r\n                    <>\r\n                    <Button as={NavLink} to=\"/course/new\" leftIcon={<AddIcon />} mr={{ base: 2 }} bg=\"transparent\" border=\"1px\">\r\n                        Create Course\r\n                    </Button>\r\n                    <Button as={NavLink} to=\"/post/new\" leftIcon={<AddIcon />} mr={{ base: 2 }} bg=\"transparent\" border=\"1px\">\r\n                        Upload\r\n                    </Button>\r\n                    <Button isLoading={auth.loading} as={NavLink} to=\"/logout\" mr={{ base: 2 }} bg=\"transparent\" border=\"1px\">\r\n                        Logout\r\n                    </Button>\r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            <Button as={NavLink} to=\"/login\" mr={{ base: 2 }} bg=\"transparent\" border=\"1px\">\r\n                                Login\r\n                            </Button>\r\n                            <Button as={NavLink} to=\"/register\" bg=\"transparent\" border=\"1px\">\r\n                                Create account\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n\r\n            </Box>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE\r\n})\r\n\r\nexport default instance\r\n\r\n","export const SEMESTER_DATA_LOADED = \"SEMESTER_DATA_LOADED\";\r\nexport const SEMESTER_DATA_ERROR = \"SEMESTER_DATA_ERROR\";\r\nexport const SEMESTER_DATA_LOADING = \"SEMESTER_DATA_LOADING\";\r\n\r\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const USER_LOGIN_ERROR = \"USER_LOGIN_ERROR\";\r\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\r\nexport const USER_LOGOUT_ERROR = \"USER_LOGOUT_ERROR\";\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\nexport const FORGET_PASSWORD_RESET_EMAIL_SENT = \"FORGET_PASSWORD_RESET_EMAIL_SENT\";\r\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\r\nexport const RESET_PASSWORD_STATUS = \"RESET_PASSWORD_STATUS\";\r\n\r\nexport const COURSE_DATA_LOADED = \"COURSE_DATA_LOADED\";\r\nexport const COURSE_DATA_LOAD_ERROR = \"COURSE_DATA_LOAD_ERROR\";\r\nexport const COURSE_CREATED = \"COURSE_CREATED\";\r\nexport const COURSE_CREATE_ERROR = \"COURSE_CREATE_ERROR\";\r\n\r\nexport const POST_DATA_LOADING = \"POST_DATA_LOADING\";\r\nexport const POST_DATA_LOADED = \"POST_DATA_LOADED\";\r\nexport const POST_DATA_LOAD_ERROR = \"POST_DATA_LOAD_ERROR\";\r\nexport const POST_CREATED = \"POST_CREATED\";\r\nexport const POST_CREATE_ERROR = 'POST_CREATE_ERROR';\r\nexport const POST_CREATE_LOADING = 'POST_CREATE_LOADING';","export function getHeaders(additional){\r\n    return {\r\n        Authorization: `Token ${localStorage.getItem('userToken')}`,\r\n        ...additional\r\n    }\r\n}\r\n\r\n\r\nexport function createUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r && 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\n\r\nexport const formatFileSize = size => {\r\n    let formattedFileSize = `${size}`\r\n\r\n    if (size < 1024){\r\n        formattedFileSize = `${size} bytes`;\r\n    }\r\n    else if ((size / 1024) < 1024){\r\n        formattedFileSize = `${(size / 1024).toFixed(2)} KB`;\r\n    }\r\n    else if ((size / (1024 * 1024)) < 1024){\r\n        formattedFileSize = `${(size / (1024 * 1024)).toFixed(2)} MB`;\r\n    }\r\n    else if((size / (1024 * 1024 * 1024)) < 1024){\r\n        formattedFileSize = `${(size / (1024 * 1024 * 1024)).toFixed(2)} GB`;\r\n    }\r\n    return formattedFileSize\r\n}\r\n\r\n\r\n\r\nexport function buildFilter(filters){\r\n    let filter = \"?\"\r\n\r\n    if(filters){\r\n        if(filters.course){\r\n            filter += `course=${filters.course}&`\r\n        }\r\n        if(filters.semester){\r\n            filter += `semester=${filters.semester}&`\r\n        }\r\n    }\r\n    return filter\r\n}\r\n\r\nexport function removeEndSign(url){\r\n    const lastChar = url.charAt(url.length-1)\r\n    if(lastChar === '?' || lastChar === '&'){\r\n        url = url.slice(0, url.length-1);\r\n    }\r\n    return url;\r\n}","import axios from '../../utils/axios';\r\nimport * as Types from './actionTypes';\r\nimport { getHeaders, removeEndSign, buildFilter } from \"../../utils\";\r\n\r\nexport const getAllPosts = (filters) => dispatch => {\r\n    \r\n    dispatch({type: Types.POST_DATA_LOADING, payload: true})\r\n    dispatch({type: Types.POST_CREATED, payload: false })\r\n\r\n    const filter = removeEndSign(buildFilter(filters))\r\n\r\n    axios.get(`/posts/${filter}`)\r\n    .then(res => {\r\n        dispatch({type: Types.POST_DATA_LOADED, payload: res.data })\r\n        dispatch({type: Types.POST_DATA_LOADING, payload: false})\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.POST_DATA_LOAD_ERROR, payload: error.response.data })\r\n        dispatch({type: Types.POST_DATA_LOADING, payload: false})\r\n    })\r\n\r\n}\r\n\r\nexport const createPost = (postData) => dispatch => {\r\n\r\n    const { postType, body, course, semester, uploadedFiles } = postData;\r\n\r\n    dispatch({type: Types.POST_CREATE_LOADING, payload: true })\r\n    dispatch({type: Types.POST_CREATED, payload: false })\r\n\r\n    if (postType === 'book'){\r\n    \r\n        const requestArray = [];\r\n        const books = uploadedFiles;\r\n\r\n        books.forEach(book => {\r\n            const form_data = new FormData();\r\n            form_data.append('file', book, book.name);\r\n            form_data.append('title', book.name);\r\n            form_data.append('course', course);\r\n            form_data.append('semester', semester);\r\n    \r\n            requestArray.push(axios.post(\"/books/\", form_data, {headers: getHeaders({'content-type': 'multipart/form-data'})}))\r\n        })\r\n\r\n\r\n        Promise.all(requestArray)\r\n            .then((responses)=>{\r\n\r\n                // now create the post\r\n                axios.post(\"/posts/\", { course, body, semester, books: responses.map(res => res.data.id) }, {headers: getHeaders()})\r\n                    .then(res => {\r\n                        dispatch({type: Types.POST_CREATED, payload: res.data })\r\n                        dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({type: Types.POST_CREATE_ERROR, payload: error.response.data })\r\n                dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n            });\r\n\r\n    }\r\n    else if (postType === 'classNote'){\r\n    \r\n        const requestArray = [];\r\n        const books = uploadedFiles;\r\n\r\n        books.forEach(book => {\r\n            const form_data = new FormData();\r\n            form_data.append('file', book, book.name);\r\n            form_data.append('title', book.name);\r\n            form_data.append('description', book.name);\r\n            form_data.append('course', course);\r\n            form_data.append('semester', semester);\r\n    \r\n            requestArray.push(axios.post(\"/classnotes/\", form_data, {headers: getHeaders({'content-type': 'multipart/form-data'})}))\r\n        })\r\n\r\n\r\n        Promise.all(requestArray)\r\n            .then((responses)=>{\r\n\r\n                // now create the post\r\n                axios.post(\"/posts/\", { course, semester, body, classnotes: responses.map(res => res.data.id) }, {headers: getHeaders()})\r\n                    .then(res => {\r\n                        dispatch({type: Types.POST_CREATED, payload: res.data })\r\n                        dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({type: Types.POST_CREATE_ERROR, payload: error.response.data })\r\n                dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n            });\r\n\r\n    }\r\n\r\n    else if (postType === 'question'){\r\n    \r\n        const requestArray = [];\r\n        const pictures = uploadedFiles;\r\n\r\n        pictures.forEach(picture => {\r\n            const form_data = new FormData();\r\n            form_data.append('picture', picture, picture.name);\r\n            form_data.append('description', picture.name);\r\n            form_data.append('course', course);\r\n            form_data.append('semester', semester);\r\n    \r\n            requestArray.push(axios.post(\"/pictures/\", form_data, {headers: getHeaders({'content-type': 'multipart/form-data'})}))\r\n        })\r\n\r\n\r\n        Promise.all(requestArray)\r\n            .then((responses)=>{\r\n                axios.post(\"/questions/\", { course, semester, pictures: responses.map(res => res.data.id) }, {headers: getHeaders()})\r\n                    .then((res => {\r\n                        // now create the post\r\n                        axios.post(\"/posts/\", { course, body, semester, questions: [res.data.id] }, {headers: getHeaders()})\r\n                            .then(res => {\r\n                                dispatch({type: Types.POST_CREATED, payload: res.data })\r\n                                dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n                            })\r\n                            .catch((error) => {\r\n                                dispatch({type: Types.POST_CREATE_ERROR, payload: error.response.data })\r\n                                dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n                            });\r\n                    }))\r\n                    .catch((error) => {\r\n                        dispatch({type: Types.POST_CREATE_ERROR, payload: error.response.data })\r\n                        dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n                    });\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({type: Types.POST_CREATE_ERROR, payload: error.response.data })\r\n                dispatch({type: Types.POST_CREATE_LOADING, payload: false })\r\n            });\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const loadPage = (filters, page=\"next\") => (dispatch, getState) => {\r\n    dispatch({type: Types.POST_DATA_LOADING, payload: true})\r\n    dispatch({type: Types.POST_CREATED, payload: false })\r\n\r\n    const prevState = getState().post\r\n\r\n    const filter = removeEndSign(buildFilter(filters))\r\n\r\n    axios.get(`${prevState[page]}${filter}`)\r\n    .then(res => {\r\n        dispatch({type: Types.POST_DATA_LOADED, payload: res.data })\r\n        dispatch({type: Types.POST_DATA_LOADING, payload: false})\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.POST_DATA_LOAD_ERROR, payload: error.response.data })\r\n        dispatch({type: Types.POST_DATA_LOADING, payload: false})\r\n    })\r\n\r\n}\r\n","import React from 'react'\r\nimport { Skeleton } from \"@chakra-ui/react\";\r\nimport { BeatLoader } from \"react-spinners\";\r\n\r\nconst Loading = ({ skeleton, ...rest }) => {\r\n\r\n    if (skeleton) {\r\n        return (\r\n            <Skeleton {...rest} />\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <BeatLoader {...rest} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Loading","import React from 'react'\r\nimport { Heading } from \"@chakra-ui/react\";\r\n\r\n\r\nconst Title = ({title, children, ...rest}) => {\r\n\r\n    if (children) {\r\n        return (\r\n            <Heading opacity=\"0.7\" size=\"md\" mb={2} {...rest}>{children}</Heading>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Heading opacity=\"0.7\" size=\"md\" mb={2} {...rest}>{title}</Heading>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Title","import React, {useState} from 'react'\r\nimport { Text, Box, List, ListItem, ListIcon, Image, Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\r\nimport Loading from '../helpers/Loading';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { Link as ChakraLink } from \"@chakra-ui/react\";\r\nimport Title from '../helpers/Title';\r\n\r\n\r\nconst SinglePost = ({ post }) => {\r\n\r\n    const images = []\r\n\r\n    post.questions.map(question => question.pictures.map(picture => images.push(picture)))\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [photoIndex, setPhotoIndex] = useState(0)\r\n\r\n\r\n    const imageOnClick = (index) => {\r\n        setPhotoIndex(index)\r\n        setIsOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Box key={post.id} boxShadow=\"md\" my={6} p=\"6\" rounded=\"md\" bg=\"white\">\r\n            <Title size=\"sm\" title={post.title} />\r\n            <hr />\r\n            <Text mt={2}>{post.body}</Text>\r\n            <Title size=\"sm\" my={2} title=\"Attachments\" />\r\n            <Wrap>\r\n                {post.questions.map(question => {\r\n                    return question.pictures.map((picture, index) => {\r\n                        return (\r\n                            <WrapItem key={picture.id}>\r\n                                <Box rounded=\"md\" boxShadow=\"md\">\r\n                                    <Image\r\n                                        onClick={() => imageOnClick(index)}\r\n                                        boxSize=\"100px\"\r\n                                        objectFit=\"cover\"\r\n                                        cursor=\"pointer\"\r\n                                        src={picture.picture}\r\n                                        alt={picture.picture}\r\n                                        _hover={{opacity: 0.5}}\r\n                                        fallback={<Loading />}\r\n                                    />\r\n                                </Box>\r\n                            </WrapItem>\r\n                        )\r\n                    })\r\n                })}\r\n            </Wrap>\r\n            {isOpen && (\r\n                <Lightbox\r\n                    mainSrc={images[photoIndex].picture}\r\n                    nextSrc={images[(photoIndex + 1) % images.length].picture}\r\n                    prevSrc={images[(photoIndex + images.length - 1) % images.length].picture}\r\n                    onCloseRequest={() => setIsOpen(false)}\r\n                    onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\r\n                    onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n                />\r\n            )}\r\n\r\n            <List mt={2} spacing={3}>\r\n                {post.books.map(book => {\r\n                    return (\r\n                        <ListItem key={book.id}>\r\n                            <ListIcon as={CheckCircleIcon} color=\"green.500\" />\r\n                            <ChakraLink target=\"_blank\" href={book.file} _hover={{opacity: 0.5}}>\r\n                                {book.title}\r\n                            </ChakraLink>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n                {post.classnotes.map(note => {\r\n                    return (\r\n                        <ListItem key={note.id}>\r\n                            <ListIcon as={CheckCircleIcon} color=\"green.500\" />\r\n                            <ChakraLink target=\"_blank\" href={note.file} _hover={{opacity: 0.5}}>\r\n                                {note.title}\r\n                            </ChakraLink>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SinglePost","import React from 'react'\r\nimport SinglePost from './SinglePost'\r\n\r\nconst Posts = ({ posts }) => {\r\n\r\n    return (\r\n        <>\r\n            {posts.map(post => <SinglePost post={post} key={post.id} />)}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Posts\r\n","import React from 'react'\r\nimport { Box, Button, Flex, Spacer } from \"@chakra-ui/react\";\r\nimport { loadPage } from \"../../store/actions/postActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Pagination = ({ postData }) => {\r\n\r\n    const { next, previous } = postData;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <Box mt={2}>\r\n            <Flex>\r\n                <Button onClick={() => dispatch(loadPage({}, \"previous\"))} disabled={!previous} mr={{ base: 2 }} bg=\"transparent\" border=\"1px\">\r\n                    Previous\r\n            </Button>\r\n                <Spacer />\r\n                <Button onClick={() => dispatch(loadPage({}, \"next\"))} disabled={!next} bg=\"transparent\" border=\"1px\">\r\n                    Next\r\n            </Button>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Pagination","import axios from '../../utils/axios'\r\nimport * as Types from './actionTypes'\r\n\r\n\r\nexport const loadSemesters = () => dispatch => {\r\n    dispatch({type: Types.SEMESTER_DATA_LOADING, payload: true })\r\n    \r\n    axios.get(\"/semesters/\")\r\n        .then(res => {\r\n            dispatch({type: Types.SEMESTER_DATA_LOADED, payload: res.data })\r\n            dispatch({type: Types.SEMESTER_DATA_LOADING, payload: false })\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: Types.SEMESTER_DATA_ERROR, payload: error.response.data })\r\n            dispatch({type: Types.SEMESTER_DATA_LOADING, payload: false })\r\n        })\r\n}","import React, { useEffect } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { loadSemesters } from '../../store/actions/semesterAction';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { List, ListItem, ListIcon, Box } from \"@chakra-ui/react\";\r\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\r\nimport Title from '../../components/helpers/Title';\r\n\r\n\r\nconst CoursePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const semesterData = useSelector(state => state.semester)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSemesters())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            { semesterData.data.length > 0 && (\r\n                <>\r\n                    {semesterData.data.map(semester => {\r\n                        return (\r\n                            <Box key={semester.id} boxShadow=\"2xl\" m={6} p=\"6\" rounded=\"md\" bg=\"white\">\r\n                                <Title title={`Courses of ${semester.full_name} (${semester.display_name})`} as=\"h2\" />\r\n                                <hr />\r\n                                <List mt={2} spacing={3}>\r\n                                    {semester.courses.map(course => {\r\n                                        return (\r\n                                            <ListItem key={course.course_code}>\r\n                                                <ListIcon as={CheckCircleIcon} color=\"green.500\" />\r\n                                                <NavLink to={`/courses/${course.id}/${course.course_code}/${course.title}`}>\r\n                                                    {course.course_code} - {course.title}\r\n                                                </NavLink>\r\n                                            </ListItem>\r\n                                        )\r\n                                    })}\r\n                                </List>\r\n                            </Box>\r\n                        )\r\n                    }\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CoursePage","import React, { useEffect } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { loadSemesters } from '../../store/actions/semesterAction';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { List, ListItem, ListIcon, Box } from \"@chakra-ui/react\";\r\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\r\nimport Title from '../../components/helpers/Title';\r\n\r\n\r\nconst SemesterPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const semesterData = useSelector(state => state.semester)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSemesters())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            { semesterData.data.length > 0 && (\r\n                <Box boxShadow=\"2xl\" m={6} p=\"6\" rounded=\"md\" bg=\"white\">\r\n                    <Title title=\"Semesters\" as=\"h2\" />\r\n                    <hr />\r\n                    <List mt={2} spacing={3}>\r\n                        {semesterData.data.map(semester => {\r\n                            return (\r\n                                <ListItem key={semester.full_name}>\r\n                                    <ListIcon as={CheckCircleIcon} color=\"green.500\" />\r\n                                    <NavLink to={`/semesters/${semester.id}/${semester.full_name}/${semester.display_name}`}>\r\n                                        {semester.full_name} - {semester.display_name}\r\n                                    </NavLink>\r\n                                </ListItem>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </List>\r\n\r\n\r\n                </Box>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SemesterPage","import React from 'react'\r\nimport { Text } from '@chakra-ui/react'\r\n\r\n\r\nconst NoPost = () => {\r\n\r\n    return (\r\n        <Text>Nothing found here</Text>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default NoPost","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink } from \"@chakra-ui/react\";\r\nimport {ChevronRightIcon} from '@chakra-ui/icons';\r\nimport Title from './Title';\r\n\r\n\r\nconst MyBreadcrumb = ({title}) => {\r\n\r\n    return (\r\n        <Title>\r\n            <Breadcrumb spacing=\"4px\" separator={<ChevronRightIcon color=\"gray.500\" />}>\r\n                <BreadcrumbItem>\r\n                    <BreadcrumbLink as={Link} to=\"/\">Home</BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n\r\n                <BreadcrumbItem isCurrentPage>\r\n                    <BreadcrumbLink>{title}</BreadcrumbLink>\r\n                </BreadcrumbItem>\r\n            </Breadcrumb>\r\n        </Title>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MyBreadcrumb","import React from 'react';\r\nimport { Box, Flex, useMediaQuery } from \"@chakra-ui/react\";\r\nimport Posts from '../post/Posts';\r\nimport Pagination from '../helpers/Pagination';\r\nimport CoursePage from '../../pages/course/CoursePage';\r\nimport SemesterPage from '../../pages/semester/SemesterPage';\r\nimport Loading from \"../helpers/Loading\";\r\nimport NoPost from '../helpers/NoPost';\r\nimport MyBreadcrumb from '../helpers/Breadcrumb';\r\n\r\nconst PostArchive = ({ title, postData }) => {\r\n\r\n    const posts = postData.data;\r\n    const [isLargerThan1280] = useMediaQuery(\"(min-width: 1280px)\")\r\n\r\n    return (\r\n        <Flex>\r\n            {isLargerThan1280 && <Box w=\"25%\"><CoursePage /></Box>}\r\n\r\n            <Box w={isLargerThan1280 ? \"50%\" : \"100%\"} boxShadow=\"2xl\" m={6} p=\"6\" rounded=\"md\" bg=\"white\">\r\n                <MyBreadcrumb title={title} />\r\n                <hr />\r\n                <Box mt={2}>\r\n                    {postData.loading ? (\r\n                        <Loading />\r\n                    ) : (\r\n                            <>\r\n                                {posts.length > 0 ? <Posts posts={posts} /> : <NoPost />}\r\n                            </>\r\n                        )}\r\n                </Box>\r\n\r\n                {/* Pagination */}\r\n                <Pagination postData={postData} />\r\n            </Box>\r\n            {isLargerThan1280 && <Box w=\"25%\"><SemesterPage /></Box>}\r\n        </Flex>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PostArchive","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllPosts } from '../store/actions/postActions';\r\nimport PostArchive from '../components/archive/PostArchive';\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const post = useSelector(state => state.post)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAllPosts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <PostArchive postData={post} title=\"Latest Updates\" />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default HomePage","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PostArchive from '../../components/archive/PostArchive';\r\nimport { getAllPosts } from \"../../store/actions/postActions\";\r\n\r\nconst IndividualSemesterPage = (props) => {\r\n\r\n    const semesterId = props.match.params.semesterId\r\n    const semesterTitle = props.match.params.semesterTitle\r\n\r\n    const dispatch = useDispatch()\r\n    const post = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPosts({semester: semesterId}))\r\n    }, [dispatch, semesterId])\r\n\r\n    return (\r\n        <PostArchive postData={post} title={`Updates from - ${semesterTitle}`} />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default IndividualSemesterPage","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllPosts } from \"../../store/actions/postActions\";\r\nimport PostArchive from '../../components/archive/PostArchive';\r\n\r\n\r\nconst IndividualCoursePage = (props) => {\r\n\r\n    const courseId = props.match.params.courseId\r\n    const courseCode = props.match.params.courseCode\r\n    const courseTitle = props.match.params.courseTitle\r\n\r\n    const dispatch = useDispatch()\r\n    const post = useSelector(state => state.post)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPosts({course: courseId}))\r\n    }, [dispatch, courseId])\r\n\r\n    return (\r\n        <PostArchive postData={post} title={`Updates from - ${courseTitle} - (${courseCode})`} />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default IndividualCoursePage","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Box, Link, Spacer, Flex, Container } from \"@chakra-ui/react\";\r\nimport Title from '../components/helpers/Title';\r\n\r\nconst BaseFormCard = (props) => {\r\n\r\n    return (\r\n        <Container maxW=\"xl\">\r\n            <Box boxShadow=\"2xl\" m={6} p=\"6\" rounded=\"md\" bg=\"white\">\r\n\r\n                <Title as=\"h2\" size=\"lg\" letterSpacing={\"-.1rem\"} title={props.title}/>\r\n                <hr />\r\n                <Box mb={4} mt={4}>\r\n                    {props.children}\r\n                </Box>\r\n\r\n                {props.type === \"login\" && (\r\n                    <Flex>\r\n                        <Link color=\"teal.500\" as={RouterLink} to=\"/forget-password\">Forgot Password?</Link>\r\n                        <Spacer />\r\n                        <Link color=\"teal.500\" as={RouterLink} to=\"/register\">Create an Account</Link>\r\n                    </Flex>\r\n                )}\r\n                {props.type === \"register\" && (\r\n                    <Link color=\"teal.500\" as={RouterLink} to=\"/login\">Already have account? Login here</Link>\r\n                )}\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BaseFormCard","import React from 'react'\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nconst SubmitButton = ({ title, ...rest }) => {\r\n\r\n    return (\r\n        <Button {...rest} colorScheme=\"teal\" mt={2} type=\"submit\">\r\n            {title}\r\n        </Button>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SubmitButton","import { FormControl, FormLabel, Input, FormErrorMessage, Select, Textarea } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\n\r\nconst FormField = (props) => {\r\n    const { value, label, onChange, id, type, placeholder, isInvalid, errorMsg } = props;\r\n    \r\n    if (type === 'select') {\r\n        return (\r\n            <FormControl isInvalid={isInvalid} mb={2} id={id}>\r\n                <FormLabel>{label}</FormLabel>\r\n                <Select value={value} onChange={(e) => onChange(e.target.value)}>\r\n                    {props.children}\r\n                </Select>\r\n                {errorMsg && <FormErrorMessage>{errorMsg}</FormErrorMessage>}\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n    if (type === 'textarea') {\r\n        return (\r\n            <FormControl isInvalid={isInvalid} mb={2} id={id}>\r\n                <FormLabel>{label}</FormLabel>\r\n                <Textarea\r\n                    value={value}\r\n                    onChange={(e) => onChange(e.target.value)}\r\n                    placeholder={placeholder}\r\n                />\r\n                {errorMsg && <FormErrorMessage>{errorMsg}</FormErrorMessage>}\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <FormControl isInvalid={isInvalid} mb={2} id={id}>\r\n            <FormLabel>{label}</FormLabel>\r\n            <Input\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                type={type}\r\n                placeholder={placeholder}\r\n            />\r\n            {errorMsg && <FormErrorMessage>{errorMsg}</FormErrorMessage>}\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default FormField","import React, { useState } from 'react';\r\nimport { Alert, AlertIcon, CloseButton } from \"@chakra-ui/react\";\r\n\r\nconst DismissableAlert = ({ type, text, ...rest }) => {\r\n\r\n    const [dismiss, setDismiss] = useState(true)\r\n\r\n\r\n    return (\r\n        <>\r\n            { dismiss && (\r\n                <Alert status={type} {...rest}>\r\n                    <AlertIcon />\r\n                    {text}\r\n                    <CloseButton onClick={() => setDismiss(false)} position=\"absolute\" right=\"8px\" top=\"8px\" />\r\n                </Alert>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DismissableAlert","import React, { useState } from 'react'\r\nimport BaseFormCard from '../../components/BaseFormCard';\r\nimport { login } from \"../../store/actions/authActions\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SubmitButton from '../../components/helpers/SubmitButton';\r\nimport FormField from '../../components/helpers/FormField';\r\nimport DismissableAlert from '../../components/helpers/DismissableAlert';\r\n\r\nconst LoginPage = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n        dispatch(login({ email, password }, history))\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"User Login\" type=\"login\">\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <FormField\r\n                    label=\"Email address\"\r\n                    value={email}\r\n                    onChange={setEmail}\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    onChange={setPassword}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                />\r\n\r\n                <SubmitButton isLoading={auth.loading} loadingText=\"Logging in...\" title=\"Login\" />\r\n            </form>\r\n            {Object.keys(auth.loginErrors).length > 0 && <DismissableAlert mt={2} text=\"Unable to login with the credentials!\" type=\"error\" />}\r\n        </BaseFormCard>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import axios from '../../utils/axios'\r\nimport * as Types from './actionTypes'\r\nimport { getHeaders} from '../../utils'\r\n\r\n\r\nexport const login = (loginCreds, history) => dispatch => {\r\n    dispatch({type: Types.AUTH_LOADING, payload: true})\r\n    dispatch({type: Types.USER_LOGIN_ERROR, payload: {}})\r\n    axios.post(\"/auth/login/\", loginCreds)\r\n        .then(res => {\r\n            localStorage.setItem(\"userToken\", res.data.key)\r\n            dispatch({type: Types.USER_LOGGED_IN })\r\n            history.push(\"/\")\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: Types.USER_LOGIN_ERROR, payload: error.response.data })\r\n            dispatch({type: Types.AUTH_LOADING, payload: false})\r\n        })\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({type: Types.AUTH_LOADING, payload: true})\r\n    \r\n    axios.post(\"/auth/logout/\", {headers: getHeaders()})\r\n        .then(res => {\r\n            localStorage.removeItem(\"userToken\")\r\n            dispatch({type: Types.AUTH_LOADING, payload: true})\r\n            dispatch({type: Types.USER_LOGGED_OUT })\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: Types.USER_LOGOUT_ERROR, payload: error.response.data })\r\n            dispatch({type: Types.AUTH_LOADING, payload: true})\r\n        })\r\n}\r\n\r\n\r\nexport const resetPasswordRequest = (email) => dispatch => {\r\n    dispatch({type: Types.AUTH_LOADING, payload: true})\r\n    dispatch({type: Types.FORGET_PASSWORD_RESET_EMAIL_SENT, payload: false})\r\n    dispatch({type: Types.USER_LOGIN_ERROR, payload: {}})\r\n\r\n    axios.post(\"/auth/password/reset/\", {email})\r\n    .then(res => {\r\n        dispatch({type: Types.AUTH_LOADING, payload: false})\r\n        dispatch({type: Types.FORGET_PASSWORD_RESET_EMAIL_SENT, payload: true})\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.AUTH_LOADING, payload: false})\r\n    })\r\n\r\n}\r\n\r\nexport const resetPassword = (token, uid, new_password1, new_password2) => dispatch => {\r\n    dispatch({type: Types.AUTH_LOADING, payload: true})\r\n    dispatch({type: Types.RESET_PASSWORD_ERROR, payload: {}})\r\n\r\n    axios.post(\"/auth/password/reset/confirm/\", {new_password1, new_password2, uid, token})\r\n    .then(res => {\r\n        dispatch({type: Types.AUTH_LOADING, payload: false})\r\n        dispatch({type: Types.RESET_PASSWORD_STATUS, payload: true})\r\n        dispatch({type: Types.RESET_PASSWORD_ERROR, payload: {}})\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.AUTH_LOADING, payload: false})\r\n        dispatch({type: Types.RESET_PASSWORD_ERROR, payload: error.response.data})\r\n    })\r\n}","import React, { useState } from 'react'\r\nimport BaseFormCard from '../../components/BaseFormCard';\r\nimport SubmitButton from '../../components/helpers/SubmitButton';\r\nimport FormField from '../../components/helpers/FormField';\r\nimport DismissableAlert from '../../components/helpers/DismissableAlert';\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [registrationNo, setRegistrationNo] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n\r\n    const submitHandler = event => {\r\n       event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"Create an Account\" type=\"register\">\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <FormField\r\n                    label=\"Email address\"\r\n                    value={email}\r\n                    onChange={setEmail}\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Full Name\"\r\n                    value={name}\r\n                    onChange={setName}\r\n                    placeholder=\"Full Name\"\r\n                    type=\"text\"\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Registration No.\"\r\n                    value={registrationNo}\r\n                    onChange={setRegistrationNo}\r\n                    type=\"text\"\r\n                    placeholder=\"2017338017\"\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Password\"\r\n                    value={password1}\r\n                    onChange={setPassword1}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                />\r\n                <FormField\r\n                    label=\"Confirm Password\"\r\n                    value={password2}\r\n                    onChange={setPassword2}\r\n                    placeholder=\"Confirm Password\"\r\n                    type=\"password\"\r\n                />\r\n\r\n                <SubmitButton disabled title=\"Register\" />\r\n                <DismissableAlert mt={2} text=\"Registration is currently unavailable!\" type=\"error\" />\r\n            </form>\r\n        </BaseFormCard>\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\r\nimport BaseFormCard from '../../components/BaseFormCard'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createCourse } from '../../store/actions/courseActions'\r\nimport { loadSemesters } from '../../store/actions/semesterAction'\r\nimport SubmitButton from '../../components/helpers/SubmitButton'\r\nimport FormField from '../../components/helpers/FormField'\r\nimport DismissableAlert from '../../components/helpers/DismissableAlert'\r\n\r\n\r\nconst CreateCourse = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const courseData = useSelector(state => state.course)\r\n    const semesterData = useSelector(state => state.semester)\r\n\r\n    const [code, setCode] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [semester, setSemester] = useState(1)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSemesters())\r\n    }, [dispatch])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        const data = {\r\n            course_code: code,\r\n            title: title,\r\n            semester: semester\r\n        }\r\n\r\n        dispatch(createCourse(data))\r\n\r\n        if (Object.keys(courseData.errors).length === 0) {\r\n            e.target.reset()\r\n            setCode(\"\")\r\n            setTitle(\"\")\r\n            setSemester(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"Create Course\">\r\n            <form onSubmit={submitHandler}>\r\n                <FormField\r\n                    id=\"courseCode\"\r\n                    label=\"Course Code\"\r\n                    type=\"text\"\r\n                    placeholder=\"EEE101\"\r\n                    value={code}\r\n                    isInvalid={!!courseData.errors.course_code}\r\n                    // isInvalid={true}\r\n                    onChange={setCode}\r\n                    errorMsg={courseData.errors.course_code && courseData.errors.course_code[0]}\r\n                // errorMsg=\"Something is wrong\"\r\n                />\r\n                <FormField\r\n                    id=\"courseTitle\"\r\n                    label=\"Course Title\"\r\n                    type=\"text\"\r\n                    placeholder=\"Fundamentals of Electrical Circuit I\"\r\n                    value={title}\r\n                    isInvalid={!!courseData.errors.title}\r\n                    onChange={setTitle}\r\n                    errorMsg={courseData.errors.title && courseData.errors.title[0]}\r\n                />\r\n                <FormField\r\n                    id=\"semester\"\r\n                    label=\"Semester\"\r\n                    type=\"select\"\r\n                    value={semester.id}\r\n                    isInvalid={!!courseData.errors.semester}\r\n                    onChange={setSemester}\r\n                    errorMsg={courseData.errors.semester && courseData.errors.semester[0]}\r\n                >\r\n                    {semesterData.data.map(semester => <option key={semester.id} value={semester.id}>{semester.full_name}</option>)}\r\n                </FormField>\r\n\r\n                <SubmitButton title=\"Create Course\" />\r\n            </form>\r\n            {courseData.created && <DismissableAlert mt={2} text=\"Course created successfully.\" type=\"success\" />}\r\n        </BaseFormCard>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CreateCourse","import axios from '../../utils/axios'\r\nimport * as Types from './actionTypes'\r\n\r\n\r\nexport const createCourse = (courseData) => dispatch => {\r\n    \r\n    axios.post(\"/courses/\", courseData)\r\n        .then(res => {\r\n            dispatch({type: Types.COURSE_CREATED, payload: res.data })\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: Types.COURSE_CREATE_ERROR, payload: error.response.data })\r\n        })\r\n}\r\n\r\nexport const getCourse = (courseId) => dispatch => {\r\n    axios.get(`/courses/${courseId}`)\r\n    .then(res => {\r\n        dispatch({type: Types.COURSE_DATA_LOADED, payload: res.data })\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.COURSE_DATA_LOAD_ERROR, payload: error.response.data })\r\n    })\r\n}\r\n\r\n\r\nexport const getAllCourse = () => dispatch => {\r\n    axios.get('/courses/')\r\n    .then(res => {\r\n        dispatch({type: Types.COURSE_DATA_LOADED, payload: res.data })\r\n    })\r\n    .catch(error => {\r\n        dispatch({type: Types.COURSE_DATA_LOAD_ERROR, payload: error.response.data })\r\n    })\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../store/actions/authActions'\r\n\r\n\r\nconst Logout = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    dispatch(logout())\r\n\r\n    return (\r\n        <Redirect to=\"/login\" />\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Logout","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { ArrowUpIcon, CheckCircleIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Box, Center, List, ListItem, ListIcon, FormLabel, Text } from \"@chakra-ui/react\";\r\nimport { formatFileSize, createUUID } from \"../../utils\";\r\n\r\nconst DragDropUpload = ({ onChange, allowedFileType, postType, error }) => {\r\n    \r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        setFiles(old => {\r\n            return [...old, ...acceptedFiles]\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        onChange(files)\r\n    })\r\n\r\n    // whenever postType change, remove all selected files.\r\n    useEffect(() => {\r\n        setFiles([]);\r\n    }, [postType])\r\n\r\n    const [files, setFiles] = useState([])\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: allowedFileType })\r\n\r\n    return (\r\n        <>\r\n            <Box boxShadow=\"md\" my={2} rounded=\"md\" py={2} bg=\"white\" {...getRootProps()}>\r\n                <Center my={2}>\r\n                    <input {...getInputProps()} />\r\n                    {isDragActive ? <p>Release files now!</p> : <p>Click or drag files here to upload</p>}\r\n                </Center>\r\n                <Center my={2}>\r\n                    <Button leftIcon={<ArrowUpIcon />} colorScheme=\"pink\">\r\n                        Choose Files\r\n                    </Button>\r\n                </Center>\r\n                { error && (\r\n                    <Center my={2}>\r\n                        <Text color=\"#ff0000\">{error}</Text>\r\n                    </Center>\r\n                )}\r\n                \r\n            </Box>\r\n            {files.length > 0 && <FileList files={files} />}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DragDropUpload\r\n\r\n\r\nconst FileList = ({ files }) => {\r\n    return (\r\n        <Box>\r\n            <FormLabel>Selected Files</FormLabel>\r\n            <List my={2} spacing={2}>\r\n                {files.map(file => (\r\n                    <ListItem key={createUUID()}>\r\n                        <ListIcon as={CheckCircleIcon} color=\"green.500\" />\r\n                        {file.name} - {formatFileSize(file.size)}\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport BaseFormCard from \"../../components/BaseFormCard\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAllCourse } from '../../store/actions/courseActions'\r\nimport { loadSemesters } from '../../store/actions/semesterAction'\r\nimport SubmitButton from '../../components/helpers/SubmitButton'\r\nimport FormField from '../../components/helpers/FormField'\r\nimport DismissableAlert from '../../components/helpers/DismissableAlert'\r\nimport { createPost } from \"../../store/actions/postActions\";\r\nimport Loading from '../../components/helpers/Loading';\r\nimport DragDropUpload from '../../components/helpers/DragDropUpload';\r\n\r\nconst CreatePost = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const courseData = useSelector(state => state.course)\r\n    const semesterData = useSelector(state => state.semester)\r\n    const postData = useSelector(state => state.post)\r\n\r\n    const [semester, setSemester] = useState(1)\r\n    const [course, setCourse] = useState(1)\r\n    const [courses, setCourses] = useState([])\r\n    const [body, setBody] = useState(\"\")\r\n    const [postType, setPostType] = useState(\"book\"); // options -> book, question, classNote\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [uploadedFileError, setUploadedFileError] = useState(\"\");\r\n    const fileTypes = {\r\n        question: 'image/jpeg, image/png, image/webp',\r\n        book: 'application/pdf',\r\n        classNote: 'application/pdf'\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSemesters())\r\n        dispatch(getAllCourse())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (uploadedFiles.length !== 0) setUploadedFileError(\"\")\r\n    }, [uploadedFiles])\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        if (uploadedFiles.length === 0) return setUploadedFileError(\"Please select some attachments!\")\r\n        else setUploadedFileError(\"\")\r\n\r\n        const data = {\r\n            uploadedFiles,\r\n            semester,\r\n            course,\r\n            body,\r\n            postType\r\n        }\r\n\r\n        dispatch(createPost(data))\r\n\r\n\r\n        if (Object.keys(postData.errors).length === 0) {\r\n            setBody(\"\")\r\n            setPostType(\"book\")\r\n            setSemester(1)\r\n            setCourse(1)\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        semesterChangeHandler(1)\r\n        // eslint-disable-next-line\r\n    }, [courseData])\r\n\r\n    const semesterChangeHandler = value => {\r\n        // set semester first\r\n        value = parseInt(value)\r\n        setSemester(value);\r\n\r\n        const allCourse = courseData.data.length > 0 ? courseData.data : [];\r\n        setCourses(allCourse.filter(course => course.semester === value))\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"Upload materials\">\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <FormField\r\n                    id=\"semester\"\r\n                    label=\"Type\"\r\n                    type=\"select\"\r\n                    value={postType}\r\n                    onChange={setPostType}\r\n                >\r\n                    <option value={'book'}>Book</option>\r\n                    <option value={'classNote'}>Class Note</option>\r\n                    <option value={'question'}>Question</option>\r\n                </FormField>\r\n\r\n                <DragDropUpload\r\n                    onChange={setUploadedFiles}\r\n                    allowedFileType={fileTypes[postType]}\r\n                    postType={postType}\r\n                    error={uploadedFileError}\r\n                />\r\n\r\n                {semesterData.data.length > 0 ? (\r\n                    <FormField\r\n                        id=\"semester\"\r\n                        label=\"Semester\"\r\n                        type=\"select\"\r\n                        value={semester}\r\n                        isInvalid={!!postData.errors.semester}\r\n                        onChange={semesterChangeHandler}\r\n                        errorMsg={postData.errors.semester && postData.errors.semester[0]}\r\n                    >\r\n                        {semesterData.data.map(semester => <option key={semester.id} value={semester.id}>{semester.full_name}</option>)}\r\n                    </FormField>\r\n                ) : <Loading skeleton height=\"20px\" />}\r\n\r\n                {courseData.data.length > 0 ? (\r\n                    <FormField\r\n                        id=\"course\"\r\n                        label=\"Course\"\r\n                        type=\"select\"\r\n                        value={course}\r\n                        isInvalid={!!postData.errors.course}\r\n                        onChange={setCourse}\r\n                        errorMsg={postData.errors.course && postData.errors.course[0]}\r\n                    >\r\n                        {courses.map(course => <option key={course.id} value={course.id}>{course.title}</option>)}\r\n                    </FormField>\r\n                ) : <Loading skeleton height=\"20px\" />}\r\n\r\n                <FormField\r\n                    id=\"body\"\r\n                    label=\"Comments (optional)\"\r\n                    type=\"textarea\"\r\n                    placeholder=\"Write something about the upload...\"\r\n                    value={body}\r\n                    isInvalid={!!postData.errors.body}\r\n                    onChange={setBody}\r\n                    errorMsg={postData.errors.body && postData.errors.body[0]}\r\n                />\r\n\r\n                <SubmitButton isLoading={postData.createLoading} loadingText=\"Posting...\" title=\"Submit\" />\r\n            </form>\r\n            {postData.created && <DismissableAlert mt={2} text=\"Your materials uploaded successfully.\" type=\"success\" />}\r\n        </BaseFormCard>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CreatePost\r\n","import React, { useState } from 'react'\r\nimport BaseFormCard from '../../../components/BaseFormCard';\r\nimport { resetPassword } from \"../../../store/actions/authActions\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SubmitButton from '../../../components/helpers/SubmitButton';\r\nimport FormField from '../../../components/helpers/FormField';\r\nimport DismissableAlert from '../../../components/helpers/DismissableAlert';\r\nimport { Box, Alert, AlertIcon, AlertTitle, AlertDescription } from \"@chakra-ui/react\"\r\n\r\n\r\nconst ResetPassword = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [new_password1, setPassword1] = useState(\"\");\r\n    const [new_password2, setPassword2] = useState(\"\");\r\n\r\n    const {uid, token} = props.match.params;\r\n\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        dispatch(resetPassword(token, uid, new_password1, new_password2));\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"Reset Password\">\r\n            <Alert status=\"info\" mb={2}>\r\n                <AlertIcon />\r\n                <Box flex=\"1\">\r\n                    <AlertTitle>Create your super secret password!</AlertTitle>\r\n                    <AlertDescription display=\"block\">\r\n                        Reset Your Password from the bellow form.\r\n                    </AlertDescription>\r\n                </Box>\r\n            </Alert>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <FormField\r\n                    label=\"Password\"\r\n                    value={new_password1}\r\n                    onChange={setPassword1}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    isInvalid={!!auth.resetPasswordErrors.new_password1}\r\n                    errorMsg={auth.resetPasswordErrors.new_password1}\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Confirm Password\"\r\n                    value={new_password2}\r\n                    onChange={setPassword2}\r\n                    placeholder=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    isInvalid={!!auth.resetPasswordErrors.new_password2}\r\n                    errorMsg={auth.resetPasswordErrors.new_password2}\r\n                />\r\n\r\n                <SubmitButton isLoading={auth.loading} loadingText=\"Resetting...\" title=\"Reset Password\" />\r\n            </form>\r\n            {auth.passwordResetted && <DismissableAlert mt={2} text=\"Password changed successfully!\" type=\"success\" />}\r\n            {Object.keys(auth.resetPasswordErrors).length > 0 && <DismissableAlert mt={2} text=\"Failed to change password!\" type=\"error\" />}\r\n        </BaseFormCard>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import React, { useState } from 'react'\r\nimport BaseFormCard from '../../../components/BaseFormCard';\r\nimport { resetPasswordRequest } from \"../../../store/actions/authActions\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SubmitButton from '../../../components/helpers/SubmitButton';\r\nimport FormField from '../../../components/helpers/FormField';\r\nimport DismissableAlert from '../../../components/helpers/DismissableAlert';\r\nimport { Box, Alert, AlertIcon, AlertTitle, AlertDescription } from \"@chakra-ui/react\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst ResetRequest = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n\r\n        if (!email) return setError(\"Please enter your email!\")\r\n        else setError(\"\")\r\n\r\n        dispatch(resetPasswordRequest(email))\r\n\r\n    }\r\n\r\n    return (\r\n        <BaseFormCard title=\"Reset Password\">\r\n            <Alert status=\"info\" mb={2}>\r\n                <AlertIcon />\r\n                <Box flex=\"1\">\r\n                    <AlertTitle>No Worry, Chill!</AlertTitle>\r\n                    <AlertDescription display=\"block\">\r\n                        Forget your password? Not a big deal, enter your email and smash Enter key, we'll take care of the rest.\r\n                    </AlertDescription>\r\n                </Box>\r\n            </Alert>\r\n            <form onSubmit={submitHandler}>\r\n\r\n                <FormField\r\n                    label=\"Email address\"\r\n                    value={email}\r\n                    onChange={setEmail}\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    isInvalid={!!error}\r\n                    errorMsg={error}\r\n                />\r\n\r\n                <SubmitButton isLoading={auth.loading} loadingText=\"Requesting...\" title=\"Reset Password\" />\r\n            </form>\r\n            {auth.passwordResetEmailSent && <DismissableAlert mt={2} text=\"If your email is associated with an account, we'll send a password reset e-mail. Please check your email!\" type=\"success\" />}\r\n        </BaseFormCard>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n       auth: state.auth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResetRequest)","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\nimport HomePage from './pages/HomePage'\r\nimport SemesterPage from './pages/semester/SemesterPage'\r\nimport IndividualSemesterPage from './pages/semester/IndividualSemesterPage'\r\nimport CoursePage from './pages/course/CoursePage';\r\nimport IndividualCoursePage from './pages/course/IndividualCoursePage'\r\nimport LoginPage from './pages/auth/LoginPage'\r\nimport RegisterPage from './pages/auth/RegisterPage'\r\nimport CreateCourse from './pages/course/CreateCourse'\r\nimport LogoutPage from './pages/auth/LogoutPage'\r\nimport { useSelector } from 'react-redux'\r\nimport CreatePost from './pages/post/CreatePost'\r\nimport ResetPassword from './pages/auth/resetPassword/ResetPassword'\r\nimport ResetRequest from './pages/auth/resetPassword/ResetRequest'\r\n\r\n\r\nconst routes = () => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/semesters\" exact component={SemesterPage} />\r\n            <Route path=\"/semesters/:semesterId/:semesterTitle\" component={IndividualSemesterPage} />\r\n            <Route path=\"/courses\" exact component={CoursePage} />\r\n            <PrivateRoute path=\"/course/new\" exact component={CreateCourse} />\r\n            <Route path=\"/courses/:courseId/:courseCode/:courseTitle\" component={IndividualCoursePage} />\r\n            <PrivateRoute path=\"/post/new\" exact component={CreatePost} />\r\n\r\n            {/* auth routes */}\r\n            <GuestRoute path=\"/login\" component={LoginPage} />\r\n            <GuestRoute path=\"/register\" component={RegisterPage} />\r\n            <GuestRoute path=\"/forget-password\" exact component={ResetRequest} />\r\n            <GuestRoute path=\"/forget-password/reset/:uid/:token\" component={ResetPassword} />\r\n            <PrivateRoute path=\"/logout\" component={LogoutPage} />\r\n        </Switch>\r\n    )\r\n\r\n}\r\n\r\nexport default routes\r\n\r\n\r\nconst GuestRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n\r\n            render={props => (\r\n                <>\r\n                    {!auth.isAuthenticated ? <Component {...props} /> : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n\r\n            render={props => (\r\n                <>\r\n                    {auth.isAuthenticated ? <Component {...props} /> : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\nimport './App.css';\nimport Navigation from './components/navigations/Navigation';\nimport Routes from \"./routes\";\n\n\n\nfunction App() {\n    return (\n        <>\n            <Navigation />\n            <Routes />\n        </>\n    );\n}\n\nexport default App;\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    loginErrors: {},\r\n    resetPasswordErrors: {},\r\n    loading: false,\r\n    passwordResetEmailSent: false,\r\n    passwordResetted: false\r\n}\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.USER_LOGGED_IN: {\r\n            return {\r\n                isAuthenticated: true,\r\n                loginErrors: {},\r\n                loading: false\r\n            }\r\n        }\r\n        case Types.AUTH_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        case Types.FORGET_PASSWORD_RESET_EMAIL_SENT: {\r\n            return {\r\n                ...state,\r\n                passwordResetEmailSent: action.payload\r\n            }\r\n        }\r\n        case Types.RESET_PASSWORD_ERROR: {\r\n            return {\r\n                ...state,\r\n                resetPasswordErrors: action.payload\r\n            }\r\n        }\r\n        case Types.RESET_PASSWORD_STATUS: {\r\n            return {\r\n                ...state,\r\n                passwordResetted: action.payload\r\n            }\r\n        }\r\n        case Types.USER_LOGIN_ERROR: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loginErrors: action.payload\r\n            }\r\n        }\r\n        case Types.USER_LOGGED_OUT: {\r\n            return {\r\n                loginErrors: {},\r\n                loading: false,\r\n                isAuthenticated: false\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    data: {},\r\n    errors: {},\r\n    created: false\r\n}\r\n\r\nfunction courseReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.COURSE_CREATED: {\r\n            return {\r\n                ...state,\r\n                created: true,\r\n                errors: {}\r\n            }\r\n        }\r\n        case Types.COURSE_DATA_LOADED: {\r\n            return {\r\n                ...state,\r\n                created: false,\r\n                errors: {},\r\n                data: action.payload\r\n            }\r\n        }\r\n        case Types.COURSE_DATA_LOAD_ERROR: {\r\n            return {\r\n                ...state,\r\n                created: false,\r\n                errors: action.payload,\r\n                data: {}\r\n            }\r\n        }\r\n        case Types.COURSE_CREATE_ERROR: {\r\n            return {\r\n                ...state,\r\n                created: false,\r\n                errors: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default courseReducer","import * as Types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n\tdata: [],\r\n    errors: {},\r\n    next: null,\r\n    previous: null,\r\n    loading: true,\r\n    created: false,\r\n    createLoading: false\r\n};\r\n\r\nfunction postReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase Types.POST_DATA_LOADED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload.results,\r\n\t\t\t\tnext: action.payload.next,\r\n\t\t\t\tprevious: action.payload.previous\r\n\t\t\t};\r\n        }\r\n        case Types.POST_DATA_LOAD_ERROR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: {},\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n        }\r\n        case Types.POST_DATA_LOADING: {\r\n\r\n            return {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n        \r\n\t\tcase Types.POST_CREATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                created: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Types.POST_CREATE_ERROR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n                errors: action.payload,\r\n                created: false\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase Types.POST_CREATE_LOADING: {\r\n\t\t\treturn {\r\n                ...state,\r\n                createLoading: action.payload\r\n            };\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default postReducer;\r\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: true\r\n}\r\n\r\nfunction semesterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.SEMESTER_DATA_LOADED: {\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        }\r\n        case Types.SEMESTER_DATA_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default semesterReducer","import { combineReducers } from 'redux'\r\nimport authReducer from './authReducer'\r\nimport courseReducer from './courseReducer'\r\nimport postReducer from './postReducer'\r\nimport semesterReducer from './semesterReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    semester: semesterReducer,\r\n    course: courseReducer,\r\n    post: postReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk'\r\n\r\nlet composers = [applyMiddleware(thunk)]\r\n\r\nif (process.env.REACT_APP_ENVIRONMENT === 'development'){\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){\r\n        composers.push(window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__())\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        ...composers\r\n    )\r\n)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as Types from \"./store/actions/actionTypes\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nconst token = localStorage.getItem(\"userToken\");\nif (token) {\n\tstore.dispatch({ type: Types.USER_LOGGED_IN });\n}\n\nReactDOM.render(\n\t<ChakraProvider>\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t</ChakraProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}